server:
  port: 8084
  # graceful shutdown makes sure we have time to finnish any ongoing rest requests before terminating
  # default value will be 30s before terminating
  shutdown: graceful

spring:
  application:
    name: visits-service

# For Exemplars to work we need histogram buckets
# management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Micrometer Observation Annotations support
# https://docs.spring.io/spring-boot/reference/actuator/observability.html

management:
  server:
    port: 9101
  health:
    probes:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  otlp:
    tracing:
      endpoint: https://otlp-gateway-prod-us-east-0.grafana.net/otlp
    metrics:
      export:
        enabled: true
        url: https://otlp-gateway-prod-us-east-0.grafana.net/otlp
        step: 5s
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  tracing:
    sampling:
      probability: 1.0
  observations:
    annotations:
      enabled: true
    enable:
      spring:
        security: false

otel:
  service:
    name: visits-service
  sdk:
    disabled: false
  logs:
    exporter: otlp
  exporter:
    otlp:
      enabled: true
      protocol: http/grpc
      endpoint: https://otlp-gateway-prod-us-east-0.grafana.net/otlp

spring:
  datasource:
    initialization-mode: always
    schema: classpath*:db/hsqldb/schema.sql
    data: classpath*:db/hsqldb/data.sql
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none


logging.level:
  org.springframework: DEBUG
  org.springframework.jdbc.core: TRACE
  io.micrometer.observation: TRACE

---
spring:
  profiles: mysql
  datasource:
    schema: classpath*:db/mysql/schema.sql
    data: classpath*:db/mysql/data.sql