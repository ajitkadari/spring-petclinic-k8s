app:
  customers:
    uri: http://localhost:8082
  vets:
    uri: http://localhost:8083
  visits:
    uri: http://localhost:8084

spring:
  application:
    name: api-gateway

spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    gateway:
      x-forwarded:
        enabled: true
        for-enabled: true
        proto-enabled: true
        host-append: false
        port-append: false
        proto-append: false
      routes:
        - id: vets-service
          uri: ${app.vets.uri}
          predicates:
            - Path=/api/vet/**
          filters:
            - StripPrefix=2
        - id: visits-service
          uri: ${app.visits.uri}
          predicates:
            - Path=/api/visit/**
          filters:
            - StripPrefix=2
        - id: customers-service
          uri: ${app.customers.uri}
          predicates:
            - Path=/api/customer/**
          filters:
            - StripPrefix=2

# For Exemplars to work we need histogram buckets
# management.metrics.distribution.percentiles-histogram.http.server.requests=true

management:
  server:
    port: 9101
  health:
    probes:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  otlp:
    tracing:
      endpoint: https://otlp-gateway-prod-us-east-0.grafana.net/otlp
    metrics:
      export:
        enabled: true
        url: https://otlp-gateway-prod-us-east-0.grafana.net/otlp
        step: 5s
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  tracing:
    sampling:
      probability: 1.0
  observations:
    enable:
      spring:
        security: false

otel:
  service:
    name: api-gateway
  sdk:
    disabled: false
  logs:
    exporter: otlp
  exporter:
    otlp:
      enabled: true
      protocol: http/grpc
      endpoint: https://otlp-gateway-prod-us-east-0.grafana.net/otlp

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.include-application-name=false

logging.level:
  org.springframework: DEBUG
  org.springframework.jdbc.core: TRACE
  io.micrometer.observation: TRACE
