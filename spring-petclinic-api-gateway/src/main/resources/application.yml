app:
  customers:
    uri: http://localhost:8082
  vets:
    uri: http://localhost:8083
  visits:
    uri: http://localhost:8084

spring:
  application:
    name: api-gateway

spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    gateway:
      x-forwarded:
        enabled: true
        for-enabled: true
        proto-enabled: true
        host-append: false
        port-append: false
        proto-append: false
      routes:
        - id: vets-service
          uri: ${app.vets.uri}
          predicates:
            - Path=/api/vet/**
          filters:
            - StripPrefix=2
        - id: visits-service
          uri: ${app.visits.uri}
          predicates:
            - Path=/api/visit/**
          filters:
            - StripPrefix=2
        - id: customers-service
          uri: ${app.customers.uri}
          predicates:
            - Path=/api/customer/**
          filters:
            - StripPrefix=2
  zipkin:
    enabled: true

management:
  server:
    port: 9101
  health:
    probes:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  otlp:
    tracing:
      endpoint: http://localhost:4318/v1/traces
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 5s
  tracing:
    sampling:
      probability: 1.0

otel:
  logs:
    exporter:
      enabled: true
      endpoint: http://localhost:3100/loki/api/v1/push

logging.level:
  org.springframework: DEBUG
  org.springframework.jdbc.core: TRACE
  io.micrometer.observation: TRACE